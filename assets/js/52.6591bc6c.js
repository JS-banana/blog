(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{558:function(t,e,s){"use strict";s.r(e);var i=s(43),v=Object(i.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("收集、记录、整理一些 Git 相关使用技巧。")])]),t._v(" "),s("h2",{attrs:{id:"git-config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-config"}},[t._v("#")]),t._v(" git config")]),t._v(" "),s("h3",{attrs:{id:"查看配置信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看配置信息"}},[t._v("#")]),t._v(" 查看配置信息")]),t._v(" "),s("ul",[s("li",[t._v("命令参数 --list，简写 -l")]),t._v(" "),s("li",[t._v("格式："),s("code",[t._v("git config [–local|–global|–system] -l")])])]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("//查看仓库级的 config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local -l\n//查看全局级的 config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global -l\n//查看系统级的 config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --system -l\n//查看当前生效的配置\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config -l\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),t._v(" "),s("h3",{attrs:{id:"打开编辑器（修改）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打开编辑器（修改）"}},[t._v("#")]),t._v(" 打开编辑器（修改）")]),t._v(" "),s("ul",[s("li",[t._v("命令参数 --edit -e")]),t._v(" "),s("li",[t._v("格式："),s("code",[t._v("git config [–local|–global|–system] -e")])])]),t._v(" "),s("p",[s("strong",[t._v("注")]),t._v("：语法相同，唯一区别是该命令会使用默认编辑器打开配置文件。")]),t._v(" "),s("h3",{attrs:{id:"添加配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加配置"}},[t._v("#")]),t._v(" 添加配置")]),t._v(" "),s("ul",[s("li",[t._v("命令参数 --add")]),t._v(" "),s("li",[t._v("格式："),s("code",[t._v("git config [–local|–global|–system] --add section.key value")])])]),t._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --add core.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sss213018@163.com"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# core.email=sss213018@163.com")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"git-push-提交到远程仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push-提交到远程仓库"}},[t._v("#")]),t._v(" git push 提交到远程仓库")]),t._v(" "),s("ul",[s("li",[t._v("默认当前分支 "),s("code",[t._v("git push")])]),t._v(" "),s("li",[t._v("指定分支 "),s("code",[t._v("git push origin master")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git push <remote> <place>")])]),t._v(" "),s("li",[t._v("该命令可翻译为：切换到本地仓库中的“"),s("code",[t._v("master")]),t._v("”分支，获取所有的提交，再到远程仓库“"),s("code",[t._v("origin")]),t._v("”中找到“"),s("code",[t._v("master")]),t._v("”分支，将远程仓库中没有的提交记录都添加上去。")])])]),t._v(" "),s("li",[t._v("指定不同分支 "),s("code",[t._v("git push origin master:newBranch")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git push origin <source>:<destination>")])]),t._v(" "),s("li",[t._v("该命令可翻译为：将本地仓库中的“"),s("code",[t._v("master")]),t._v("”分支合并到远程的"),s("code",[t._v("newBranch")]),t._v("分支，如果该"),s("code",[t._v("newBranch")]),t._v("分支不存在远程，则会以此名称创建。")])])])]),t._v(" "),s("h2",{attrs:{id:"git-fetch-拉取远程到本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch-拉取远程到本地"}},[t._v("#")]),t._v(" git fetch 拉取远程到本地")]),t._v(" "),s("blockquote",[s("p",[t._v("整体用法与"),s("code",[t._v("git push")]),t._v("类似，只是方向相反罢了。")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git fetch")]),t._v(" ：下载所有的提交记录到各个远程分支")]),t._v(" "),s("li",[s("code",[t._v("git fetch origin foo")]),t._v(" ：下载远程foo分支的提交记录到本地"),s("code",[t._v("o/foo")]),t._v("分支，它不会更新你的本地的非远程分支, 只是下载提交记录。")]),t._v(" "),s("li",[s("code",[t._v("git fetch origin <source>:<destination>")]),t._v(" ："),s("code",[t._v("source")]),t._v("现在指的是远程仓库中的位置，而"),s("code",[t._v("destination")]),t._v("才是要放置提交的本地仓库的位置。")])]),t._v(" "),s("h2",{attrs:{id:"git-merge-分支合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-分支合并"}},[t._v("#")]),t._v(" git merge 分支合并")]),t._v(" "),s("ul",[s("li",[t._v("快进模式：直接把master指向dev的当前提交\n"),s("code",[t._v("git merge dev")]),t._v(" //把dev合并到当前分支")]),t._v(" "),s("li",[t._v("保留信息整体合并--no-ff：\n"),s("code",[t._v('git merge --no-ff -m "merge with no-ff" dev')])]),t._v(" "),s("li",[t._v("合并提交：\n"),s("code",[t._v("git log --oneline -3")]),t._v(" //查看最近 3 次\n"),s("code",[t._v("git cherry-pick 6432f50")]),t._v(" //把记录 6432f50 合并到当前分支")])]),t._v(" "),s("h2",{attrs:{id:"git-pull-拉取并合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-pull-拉取并合并"}},[t._v("#")]),t._v(" git pull 拉取并合并")]),t._v(" "),s("blockquote",[s("p",[t._v("git pull 相当于是 fetch 后跟 merge 的缩写。你可以理解为用同样的参数执行 git fetch，然后再 merge 你所抓取到的提交记录。")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("git pull origin foo")]),t._v(" ：相当于 "),s("code",[t._v("git fetch origin foo")]),t._v("; "),s("code",[t._v("git merge o/foo")])]),t._v(" "),s("li",[s("code",[t._v("git pull origin master:foo")]),t._v(" ：它先在本地创建了一个叫 foo的分支，从远程仓库中的 master 分支中下载提交记录，并合并到 foo，然后再 merge 到我们的当前检出的分支 bar上。")])]),t._v(" "),s("h2",{attrs:{id:"git-tag-打标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-tag-打标签"}},[t._v("#")]),t._v(" git tag 打标签")]),t._v(" "),s("ul",[s("li",[t._v("轻量标签："),s("code",[t._v("git tag v1.0")]),t._v(" "),s("ul",[s("li",[t._v("轻量标签本质上是将提交校验和存储到一个文件中——没有保存任何其他信息。 创建轻量标签，不需要使用 -a、-s 或 -m 选项，只需要提供标签名字")])])]),t._v(" "),s("li",[t._v("附注标签："),s("code",[t._v('git tag -a v1.0 -m "my version 1.0"')])]),t._v(" "),s("li",[t._v("后期打标签: "),s("code",[t._v("git tag -a v1.0 9fceb02")]),t._v(" //指定某次提交\n"),s("ul",[s("li",[t._v("git log --oneline -3 //查看提交历史与hash值 e3890bc")])])]),t._v(" "),s("li",[t._v("推送到远程origin\n"),s("ul",[s("li",[s("code",[t._v("git push origin v1.0")]),t._v(" 或 "),s("code",[t._v("git push origin --tags")])])])])]),t._v(" "),s("h2",{attrs:{id:"git-checkout-检出、替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-检出、替换"}},[t._v("#")]),t._v(" git checkout 检出、替换")]),t._v(" "),s("p",[s("strong",[t._v("检出：分支切换、文件恢复")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("创建切换分支："),s("code",[t._v("git checkout -b xx")]),t._v(" 等同于 1. "),s("code",[t._v("git branch xx")]),t._v(" 2. "),s("code",[t._v("git checkout xx")])]),t._v(" "),s("li",[t._v("恢复状态： "),s("code",[t._v("git checkout ./")])]),t._v(" "),s("li",[t._v("git checkout 文件名")])]),t._v(" "),s("p",[s("strong",[t._v("替换覆盖：达到合并指定文件夹或文件到分支的效果")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("场景：如当前在"),s("code",[t._v("master")]),t._v("分支，合并"),s("code",[t._v("dev")]),t._v("分支下的"),s("code",[t._v("test")]),t._v("文件夹中所有文件到"),s("code",[t._v("master")])]),t._v(" "),s("li",[t._v("示例："),s("code",[t._v("git checkout dev src/pages/test")]),t._v(" // git checkout "),s("em",[t._v("分支")]),t._v(" "),s("em",[t._v("文件路径")])])]),t._v(" "),s("blockquote",[s("p",[t._v("tips：该操作是直接替换并不是合并，实际操作时可以再新建一个分支避免丢失别人别人的改动记录。")])]),t._v(" "),s("h2",{attrs:{id:"delete-删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete-删除分支"}},[t._v("#")]),t._v(" delete 删除分支")]),t._v(" "),s("ul",[s("li",[t._v("查看所有分支："),s("code",[t._v("git branch -a")])]),t._v(" "),s("li",[t._v("删除本地分支："),s("code",[t._v("git branch -d xx")])]),t._v(" "),s("li",[t._v("删除远程分支："),s("code",[t._v("git push origin --delete xx")])])]),t._v(" "),s("h2",{attrs:{id:"set-url-更改远程地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-url-更改远程地址"}},[t._v("#")]),t._v(" set-url 更改远程地址")]),t._v(" "),s("ul",[s("li",[t._v("绑定 ssh 地址："),s("code",[t._v("git remote set-url origin git@git.xx.com")])]),t._v(" "),s("li",[t._v("push 所有 commit 和 branch："),s("code",[t._v("git push -u origin --all")]),t._v(" // -u 可以不加")]),t._v(" "),s("li",[t._v("push 所有 tag："),s("code",[t._v("git push -u origin --tags")])])]),t._v(" "),s("blockquote",[s("p",[t._v("-u 的作用\n远程库有可能并没有mybranch1分支：\ngit push -u origin mybranch1 相当于\ngit push origin mybranch1 + git branch --set-upstream-to=origin/mybranch1 mybranch1")])]),t._v(" "),s("h2",{attrs:{id:"git-stash-提交特定文件、恢复错误的存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-stash-提交特定文件、恢复错误的存储"}},[t._v("#")]),t._v(" git stash 提交特定文件、恢复错误的存储")]),t._v(" "),s("ul",[s("li",[t._v("作用：用于想要保存当前的修改,但是想回到之前最后一次提交的干净的工作仓库时进行的操作，"),s("code",[t._v("git stash")]),t._v("将本地的修改保存起来，并且将当前代码切换到"),s("code",[t._v("HEAD")]),t._v("提交上。")]),t._v(" "),s("li",[t._v("场景：①开发到一半,同步远端代码、②工作流被打断,需要先做别的需求、③提交特定文件、④恢复被错误clear/drop的存储。")]),t._v(" "),s("li",[s("code",[t._v("git stash")]),t._v("：等同于 "),s("code",[t._v("git stash save")]),t._v(" ，存储修改并且将"),s("code",[t._v("git")]),t._v("的工作状态切回到"),s("code",[t._v("HEAD")]),t._v("上一次合法提交上")]),t._v(" "),s("li",[s("code",[t._v("git stash pop")]),t._v("：移除单个存储单元，和"),s("code",[t._v("git stash save")]),t._v("的作用相反。")]),t._v(" "),s("li",[s("code",[t._v("git stash list")]),t._v("：查看修改列表")]),t._v(" "),s("li",[s("code",[t._v("git stash show")]),t._v("：展示存储单元和最新提交的"),s("code",[t._v("diff")]),t._v("结果")]),t._v(" "),s("li",[s("code",[t._v("git stash apply")]),t._v("：用于重新存储")])]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/suihang/p/10556519.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/suihang/p/10556519.html"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/book/zh/v2/Git-基础-打标签"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.zhihu.com/question/20019419",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.zhihu.com/question/20019419"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.liaoxuefeng.com/wiki/896043488029600"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/14afc9916dcb",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/14afc9916dcb"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/zzzzlei123123123/article/details/90400884",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/zzzzlei123123123/article/details/90400884"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);