(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{522:function(t,e,s){"use strict";s.r(e);var a=s(43),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("最近在面试的过程中有被问及到"),s("code",[t._v("websocket")]),t._v("的连接过程（简历中项目有使用到"),s("code",[t._v("websocket")]),t._v("），一时有点懵，以为是在问使用方式，后来确定了下是在问网络层面的连接过程，是如何进行的，以及"),s("code",[t._v("http")]),t._v("和"),s("code",[t._v("socket")]),t._v("的过程。")]),t._v(" "),s("p",[t._v("我只做过心跳和断网重连的一些基本使用，对原理层面知之甚少。对于简历中的项目涉及到的"),s("code",[t._v("websocket")]),t._v("技术还是属于了解的比较浅的，问题很有点大啊。总的来说对于简历中的技术应该还是要做到比较熟悉才行，项目和技术栈还是有必要好好准备一番的。")]),t._v(" "),s("h2",{attrs:{id:"为什么需要websocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要websocket"}},[t._v("#")]),t._v(" 为什么需要WebSocket")]),t._v(" "),s("p",[t._v("主要原因就是："),s("strong",[t._v("HTTP 协议通信只能由客户端发起")]),t._v("（HTTP是非持久的协议）。")]),t._v(" "),s("p",[t._v("以PHP生命周期为例：")]),t._v(" "),s("ul",[s("li",[t._v("HTTP的生命周期通过"),s("code",[t._v("Request")]),t._v("来界定，也就是一个"),s("code",[t._v("Request")]),t._v(" 一个"),s("code",[t._v("Response")]),t._v("，那么在HTTP1.0中，这次HTTP请求就结束了。")]),t._v(" "),s("li",[t._v("在HTTP1.1中进行了改进，使得有一个"),s("code",[t._v("keep-alive")]),t._v("，也就是说，在一个HTTP连接中，可以发送多个"),s("code",[t._v("Request")]),t._v("，接收多个"),s("code",[t._v("Response")]),t._v("。")])]),t._v(" "),s("p",[t._v("但是请记住 "),s("code",[t._v("Request = Response")]),t._v("， 在HTTP中永远是这样，也就是说一个"),s("code",[t._v("request")]),t._v("只能有一个"),s("code",[t._v("response")]),t._v("。而且这个"),s("code",[t._v("response")]),t._v("也是被动的，不能主动发起。")]),t._v(" "),s("p",[t._v("对于状态监听并在变化后推送消息通知到客户端这种场景，在此之前常用的手段一般是轮询："),s("strong",[t._v("每隔一段时候，就发出一个询问，了解服务器有没有新的信息")]),t._v("（轮询的效率低，非常浪费资源——因为必须不停连接，或者 "),s("code",[t._v("HTTP")]),t._v(" 连接始终打开）。")]),t._v(" "),s("blockquote",[s("p",[t._v("轮询这样的方法最明显的缺点就是需要不断的发送请求，而且通常HTTP request的Header是非常长的，为了传输一个很小的数据需要付出巨大的代价，是很不合算的，占用了很多的宽带资源。")])]),t._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("首先，"),s("code",[t._v("WebSocket")]),t._v("是HTML5新出的一种协议。")]),t._v(" "),s("p",[t._v("Websocket其实是一个新协议，跟HTTP协议基本没有关系，只是为了兼容现有浏览器的握手规范而已，有交集，但是并不是全部。")]),t._v(" "),s("p",[s("code",[t._v("WebSocket")]),t._v(" 协议在2008年诞生，2011年成为国际标准（目前主流浏览器都支持，不存在兼容问题）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/JS-banana/images/vuepress/websocket-1.webp",alt:"WebSocket兼容性"}})]),t._v(" "),s("h3",{attrs:{id:"一些特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些特点"}},[t._v("#")]),t._v(" 一些特点")]),t._v(" "),s("p",[t._v("它的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，属于服务器推送技术的一种。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/JS-banana/images/vuepress/websocket-2.webp",alt:"WebSocket双向平等对话"}})]),t._v(" "),s("ol",[s("li",[t._v("更强的实时性：由于协议是全双工的，所以服务器可以随时主动给客户端下发数据。")]),t._v(" "),s("li",[t._v("更小的控制开销：数据格式比较轻量，性能开销小，通信高效（用于协议控制的数据包头部相对较小）。")]),t._v(" "),s("li",[t._v("良好的"),s("code",[t._v("HTTP")]),t._v("协议兼容性：与 "),s("code",[t._v("HTTP")]),t._v(" 和 "),s("code",[t._v("HTTPS")]),t._v(" 使用相同的 "),s("code",[t._v("TCP")]),t._v(" 端口，握手阶段采用 "),s("code",[t._v("HTTP")]),t._v(" 协议，协议标识符是"),s("code",[t._v("ws")]),t._v("（如果加密，则为"),s("code",[t._v("wss")]),t._v("）")]),t._v(" "),s("li",[t._v("更好的二进制支持：可以发送文本，也可以发送二进制数据（定义了二进制帧）。")]),t._v(" "),s("li",[t._v("可在单个 "),s("code",[t._v("TCP")]),t._v(" 连接上进行全双工通信，位于 OSI 模型的应用层。")]),t._v(" "),s("li",[t._v("没有同源限制，客户端可以与任意服务器通信。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/JS-banana/images/vuepress/websocket-3.webp",alt:"WebSocket的ws和wss"}})]),t._v(" "),s("h3",{attrs:{id:"主要api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要api"}},[t._v("#")]),t._v(" 主要API")]),t._v(" "),s("ul",[s("li",[t._v("WebSocket 对象作为一个构造函数，用于新建 WebSocket 实例（"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关API见官网"),s("OutboundLink")],1),t._v("）。")]),t._v(" "),s("li",[t._v("核心属性："),s("code",[t._v("onopen")]),t._v("、"),s("code",[t._v("onclose")]),t._v("、"),s("code",[t._v("onerror")]),t._v("、"),s("code",[t._v("onmessage")]),t._v("、"),s("code",[t._v("binaryType")]),t._v("、"),s("code",[t._v("readyState")]),t._v("等9个。\n"),s("ul",[s("li",[s("code",[t._v("onopen")]),t._v("：用于指定连接成功后的回调函数")]),t._v(" "),s("li",[s("code",[t._v("onclose")]),t._v("：用于指定连接关闭后的回调函数")]),t._v(" "),s("li",[s("code",[t._v("onerror")]),t._v("：用于指定连接失败后的回调函数")]),t._v(" "),s("li",[s("code",[t._v("onmessage")]),t._v("：用于指定当从服务器接受到信息时的回调函数")]),t._v(" "),s("li",[s("code",[t._v("binaryType")]),t._v("：使用二进制的数据类型连接（"),s("code",[t._v('binaryType: "blob"')]),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("readyState")]),t._v("（只读）：返回当前 WebSocket 的连接状态，共有 4 种状态")])])]),t._v(" "),s("li",[t._v("核心方法："),s("code",[t._v("send")]),t._v("、"),s("code",[t._v("close")]),t._v("。\n"),s("ul",[s("li",[s("code",[t._v("send")]),t._v("：该方法将需要通过 WebSocket 链接传输至服务器的数据排入队列")]),t._v(" "),s("li",[s("code",[t._v("close")]),t._v("：该方法用于关闭 WebSocket 连接")])])]),t._v(" "),s("li",[t._v("事件："),s("code",[t._v("open")]),t._v("、"),s("code",[t._v("close")]),t._v("、"),s("code",[t._v("error")]),t._v("、"),s("code",[t._v("message")]),t._v("（配合"),s("code",[t._v("addEventListener")]),t._v("方法使用，与通过上面"),s("code",[t._v("onopen")]),t._v("、"),s("code",[t._v("onclose")]),t._v("等4个属性方法设置使用一样）。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// readyState")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONNECTING")]),t._v(" — 正在连接中，对应的值为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("；\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OPEN")]),t._v(" — 已经连接并且可以通讯，对应的值为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLOSING")]),t._v(" — 连接正在关闭，对应的值为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("；\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CLOSED")]),t._v(" — 连接已关闭或者没有连接成功，对应的值为 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"基本用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[t._v("#")]),t._v(" 基本用法")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ws "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wss://echo.websocket.org"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onopen")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Connection open ..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello WebSockets!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received Message: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" evt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Connection closed."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h3",{attrs:{id:"websocket与http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket与http"}},[t._v("#")]),t._v(" webSocket与http")]),t._v(" "),s("p",[t._v("相同点：")]),t._v(" "),s("ol",[s("li",[t._v("都是基于TCP的可靠性传输协议。")]),t._v(" "),s("li",[t._v("都是应用层协议")])]),t._v(" "),s("p",[t._v("不同点：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("WebSocket")]),t._v("是一个持久化的协议，相对于"),s("code",[t._v("HTTP")]),t._v("这种非持久的协议来说。")]),t._v(" "),s("li",[s("code",[t._v("WebSocket")]),t._v("是双向通信协议，模拟"),s("code",[t._v("Socket")]),t._v("协议，可以双向发送或接受信息。"),s("code",[t._v("HTTP")]),t._v("是单向的。")]),t._v(" "),s("li",[t._v("连接行为和状态\n"),s("ul",[s("li",[t._v("在传统的方式上，要不断的建立，关闭HTTP协议，由于HTTP是非状态性的，每次都要重新传输identity info（鉴别信息），来告诉服务端你是谁。")]),t._v(" "),s("li",[t._v("Websocket只需要一次HTTP握手，所以说整个通讯过程是建立在一次连接/状态中，也就避免了HTTP的非状态性，服务端会一直知道你的信息，直到你关闭请求，这样就解决了接线员要反复解析HTTP协议，还要查看identity info的信息。")])])])]),t._v(" "),s("p",[t._v("特殊说明：WebSocket在建立握手时，数据是通过HTTP传输的。但是建立之后，在真正传输时候是不需要HTTP协议的")]),t._v(" "),s("h2",{attrs:{id:"websocket的连接过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket的连接过程"}},[t._v("#")]),t._v(" webSocket的连接过程")]),t._v(" "),s("ol",[s("li",[t._v("Websocket一开始的握手需要借助HTTP请求完成，也是建立在TCP之上的，即浏览器、服务器建立TCP连接，三次握手。")]),t._v(" "),s("li",[t._v("TCP连接成功后，浏览器通过HTTP协议向服务器传送WebSocket支持的版本号等信息。")]),t._v(" "),s("li",[t._v("服务器收到客户端的握手请求后，同样采用HTTP协议回馈数据。")]),t._v(" "),s("li",[t._v("当收到了连接成功的消息后，通过TCP通道进行传输通信。")])]),t._v(" "),s("p",[t._v("在客户端，"),s("code",[t._v("new WebSocket('ws://server.example.com')")]),t._v("实例化一个新的"),s("code",[t._v("WebSocket")]),t._v("客户端对象，连接服务端"),s("code",[t._v("WebSocket URL")]),t._v("，"),s("code",[t._v("WebSocket")]),t._v("客户端对象会自动解析并识别为"),s("code",[t._v("WebSocket")]),t._v("请求，从而连接服务端端口，执行双方握手过程。")]),t._v(" "),s("h3",{attrs:{id:"客户端请求报文-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端请求报文-header"}},[t._v("#")]),t._v(" 客户端请求报文 Header")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("chat "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Host")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Upgrade")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" websocket\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Connection")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Upgrade\nSec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" x3JJHMbDL1EzLkh9GBhXDw"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nSec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protocol"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" chat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" superchat\nSec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Origin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("可以看到，客户端发起的"),s("code",[t._v("WebSocket")]),t._v("连接报文类似传统"),s("code",[t._v("HTTP")]),t._v("报文，但多出了一些东西")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Upgrade：websocket")]),t._v("/"),s("strong",[t._v("Connection: Upgrade")]),t._v("：参数值表明这是"),s("code",[t._v("WebSocket")]),t._v("类型请求（这个是Websocket的核心，告诉Apache、Nginx等服务器，发起的是Websocket协议）。")]),t._v(" "),s("li",[s("strong",[t._v("Sec-WebSocket-Key")]),t._v("：是一个"),s("code",[t._v("Base64")]),t._v("编码的值，是由浏览器随机生成的，提供基本的防护，防止恶意或者无意的连接。")]),t._v(" "),s("li",[s("strong",[t._v("Sec_WebSocket-Protocol")]),t._v("：是一个用户定义的字符串，用来区分同URL下，不同的服务所需要的协议。")]),t._v(" "),s("li",[s("strong",[t._v("Sec-WebSocket-Version")]),t._v("：表示 WebSocket 的版本，最初 WebSocket 协议太多，不同厂商都有自己的协议版本，不过现在已经定下来了。如果服务端不支持该版本，需要返回一个 "),s("code",[t._v("Sec-WebSocket-Versionheader")]),t._v("，里面包含服务端支持的版本号。")])]),t._v(" "),s("h3",{attrs:{id:"服务端响应报文-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端响应报文-header"}},[t._v("#")]),t._v(" 服务端响应报文 Header")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(" Switching Protocols\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Upgrade")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" websocket\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Connection")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Upgrade\nSec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Accept"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HSmrc0sMlYUkAGmm5OPpG2HaGWk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nSec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("WebSocket"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Protocol"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" chat\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ol",[s("li",[t._v("首先，"),s("code",[t._v("101")]),t._v(" 状态码表示服务器已经理解了客户端的请求，并将通过"),s("code",[t._v("Upgrade")]),t._v(" 消息头通知客户端采用不同的协议来完成这个请求；")]),t._v(" "),s("li",[t._v("然后，"),s("code",[t._v("Sec-WebSocket-Accept")]),t._v(" 这个则是经过服务器确认，并且加密过后的 "),s("code",[t._v("Sec-WebSocket-Key")]),t._v("；")]),t._v(" "),s("li",[t._v("最后，"),s("code",[t._v("Sec-WebSocket-Protocol")]),t._v(" 则是表示最终使用的协议。")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：Sec-WebSocket-Key/Sec-WebSocket-Accept 的换算，只能带来基本的保障，但连接是否安全、数据是否安全、客户端 / 服务端是否合法的 ws 客户端、ws 服务端，其实并没有实际性的保证。")])]),t._v(" "),s("p",[t._v("至此，HTTP已经完成它所有工作了，接下来就是完全按照Websocket协议进行了。")]),t._v(" "),s("h2",{attrs:{id:"资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[t._v("#")]),t._v(" 资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2017/05/websocket.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocket 教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000040793931",target:"_blank",rel:"noopener noreferrer"}},[t._v("万字长文，一篇吃透WebSocket：概念、原理、易错常识、动手实践"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://jishuin.proginn.com/p/763bfbd32153",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocket一篇就够了"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.zhihu.com/question/20215561",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocket 是什么原理？为什么可以实现持久连接？"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);